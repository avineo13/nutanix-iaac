---
# Example execution:
#   -> ansible-playbook delete_volume_groups.yaml -e environment_key=nonprod -e site_key=qd5  -e nutanix_host=10.10.3.10 --vault-pass-file .vault-token  -e vg_name=gfgfg22July
- name: Delete Volume Groups
  hosts: localhost
  vars_files:
    - "vars/{{ environment_key }}/{{ site_key }}/volumegroups/var_{{ vg_name }}.yaml"
    - var_vault.yaml
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: "{{ nutanix_host }}"
      nutanix_username: "{{ nutanix_username }}"
      nutanix_password: "{{ nutanix_password }}"
      validate_certs: false
  tasks:
    #### Helper Task Operations
    - name: Fetch cluster uuids
      ansible.builtin.include_tasks: task_helpers/get_cluster_uuids.yaml
      vars:
        ntnx_cluster_list:
          - "{{ cluster_name }}"

    - name: Get list of VMs and their IDs
      ansible.builtin.include_tasks: task_helpers/get_vm_uuids.yaml
      vars:
        ntnx_vms_list: "{{ attach_vms + detach_vms }}"

    - name: Fetch storage container IDs
      ansible.builtin.include_tasks: task_helpers/get_storage_containers_uuids.yaml
      vars:
        ntnx_storage_containers_list:
          - "{{ storage_container }}"

    - name: Get VG and their IDs
      ansible.builtin.include_tasks: task_helpers/get_vg_uuids.yaml
      vars:
        ntnx_vgs_list:
          - "{{ vg_name }}"

    #### Prechecks
    - name: Check if VG exists
      nutanix.ncp.ntnx_volume_groups_info_v2:
        validate_certs: false
        select: "extId"
        filter: "name eq '{{ vg_name }}'"
      register: verify_vg_presence

    - name: Fail if more than one already exists
      ansible.builtin.fail:
        msg: "More than one Volume Group, or no Volume Group with the same name exists. Please ensure that the volume group exists, and there's only one."
      when: verify_vg_presence.response | length != 1

    #### Volume Group VM Task Operations
    - name: Detach VMs from VG
      nutanix.ncp.ntnx_volume_groups_vms_v2:
        state: "absent"
        volume_group_ext_id: "{{ vgs_name_to_uuid[vg_name] }}"
        ext_id: "{{ vms_name_to_uuid[item] }}"
      loop: "{{ attach_vms + detach_vms }}"
      register: detach_vm_output
      vars:
        failed_msg_check: "{{ 'VG does not have VM attachment with UUID: ' + vms_name_to_uuid[item] }}"
      failed_when:
        - detach_vm_output.msg is defined
        - detach_vm_output.msg == "Task Failed"
        - detach_vm_output.response.legacy_error_message != failed_msg_check

    #### Volume Group Operations
    - name: Delete Volume group
      nutanix.ncp.ntnx_volume_groups_v2:
        state: "absent"
        ext_id: "{{ verify_vg_presence.response[0]['ext_id'] }}"
      when: verify_vg_presence.response | length == 1
...